1. Chúng ta có 3 mode do Nuxt cung cấp
- Universal
+ UI được render động trên Server
+ Sau first load, App chuyển sang chế độ SPA
+ Cần Nodejs Host vì các pages được tạo ngay lập tức mỗi khi có request

- SPA
+ App được render lên client không chứa content mà chỉ có đoạn script để refer vào script của all pages
+ Static host

- Static
+ Ta sẽ pre-render (kết xuất trước) ra các HTML tĩnh trong quá trình development
+ Ta sẽ ko cần node server
+ In the end, sẽ gửi lên client những HTML đã được tạo trước
+ Static host


2. Work
- Universal (Deploying a Universal App)
** Bạn sẽ deploy và đưa toàn bộ project folder lên các nhà cung cấp hosting (node host)
+ Set mode là 'universal'
+ Đầu tiên cần build app: npm run build -> bundle sẽ vào trong thư mục .nuxt/
+ Sau đó uppload TOÀN BỘ project: .nuxt/, node_modules, package.json,... lên webserver (Webserver này sẽ chạy Node.js)
+ Bạn có thể chọn hosting provider như Heroku hay AWS
+ Tùy vào provider hosting bạn có thể sẽ ko cần upload node_modules vì lệnh npm install được chạy tự động trên webserver
+ Đảm bảo lệnh npm start chạy được và đúng là npm start (mặc định trên hosting)
+ npm start sẽ khởi động Node server của provider -> config bởi Nuxt và kích hoạt server side redering của Vue app


- SPA
+ Set mode là 'spa'
+ Đầu tiên cần build app: npm run build -> bundle sẽ vào trong thư mục dist (ko phải .nuxt/)
+ Với SPA, ta chỉ cần deploy mỗi dist folder
+ Lưu ý: sẽ ko có bất kỳ pre-render nào, ko có gì render từ server cả
+ Lưu ý: đảm bảo rằng bạn thiết lập server để luôn trả về index.html.
+ Sau đó chỉ cần update dist folder lên 1 static host
+ Có thể test bằng cách install http-server vào app: sau đó point tới dist gõ: http-server -p 8082
+ Những method liên quan tới server sẽ ko work như: nuxtSeverInit,... thay và đó là created hay mounted


- Static web
+ Set mode là 'universal', cũng work với spa nhưng ko ấn tượng
+ Chúng ta sẽ gõ: npm run generate
+ Nó sẽ tạo ra toàn bộ các trang (pages) trong app
+ Trong thư mục dist, chúng ta sẽ có các folder chứa các file HTML
+ Toàn bộ content sẽ có trong từng file HTML đó
+ -> Các pages trên client đã được pre-rendered (kết xuất trước)
+ Vẫn có hiệu ứng single page app

+ Bạn sẽ ko cần những pre-redender page trên server -> ko cần Node server
+ Nhưng những trang có dynamic routes như trang detail: /post/5  /post/6 sẽ không được pre-render
** Vì đơn giản Nuxt ko biết được trước sẽ có những routes nào


3. Improve issue về pre-render của Static app
- Vào nuxt.config.js sẽ khai báo 1 mảng các dynamic routes cần pre-render
generate: {
  routes: function(){
    return [
      '/post/4',
      '/post/6'
    ]
  }
}

- Đối với nhiều dynamic routes thì:
generate: {
  routes: function() {
    return axios.get('https:...get all post')
      .then(res => {
        const routes = []
        for (const key in res.data) {
          routes.push({
            path: '/post/' + key,
            payload: { postData: res.data[key] }  //truyền data lên page detail index
          })
        }
        return routes
      })
  }
}

+ Ở page detail index
asyncData(context) {
  if(context.payload) {
    return {
      loadedPost: context.payload.postData
    }
  }
}

